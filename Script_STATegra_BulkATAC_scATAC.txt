#########################################################################
#######         ANALYSIS OF BULK AND SINGLE CELL ATAC-seq DATA STATEGRA       #######       
#########################################################################

## By Ricardo Ramirez; Ricardo_Ramirez@hms.harvard.edu


##Raw and processed data can also be retrieved from GEO Accession https://urldefense.proofpoint.com/v2/url?u=https-3A__www.ncbi.nlm.nih.gov_geo_query_acc.cgi-3Facc-3DGSE89362-23-23&d=DwIGaQ&c=sJ6xIWYx-zLMB3EPkvcnVg&r=1rNtuk6CYez3Endg5HqYEg&m=0aNj56FCubQL3d2vuuBMMPlr6_wrQxKVKKmmyeGBDtA&s=CTenExKZyap0hKwUUDUZ7G0TtCxum9eyICs7UBxp468&e= 

##scATAC-seq libraries for the 0h time-point were run in a single Fluidigm C1 run, while the 24hr time-point were run twice and contain the extension “.2” to clarify batches.##

####  THIS PORTION OF THE SCRIPT IS RUN IN HPC CLUSTER WITH A .SH SCRIPT ####
#############################################################################
#mapping single-cell ATAC-seq data
module load bowtie2
module load Picard
module load samtools

#example for 1 sample
bowtie2 -x mm10 -1 $i-Read1.fastq -2 $i-Read2.fastq -S $i.sam -p 10 --trim3 10 -X 2000

#Estimate library complexity and generation of sorted BAM file for 1 example
java -Xmx2g -jar /data/apps/picard-tools/1.96/SamFormatConverter.jar INPUT=A1.sam OUTPUT=A1.bam VALIDATION_STRINGENCY=LENIENT
java -Xmx2g -jar /data/apps/picard-tools/1.96/SortSam.jar INPUT=A1.bam OUTPUT=A1.sorted.bam SORT_ORDER=coordinate VALIDATION_STRINGENCY=LENIENT
java -Xmx2g -jar /data/apps/picard-tools/1.96/MarkDuplicates.jar INPUT=A1.sorted.bam OUTPUT=A1.sorted.piccard.bam METRICS_FILE=PCR_duplicates REMOVE_DUPLICATES=true
java -Xmx2g -jar /data/apps/picard-tools/1.96/EstimateLibraryComplexity.jar INPUT=A1.sorted.piccard.bam OUTPUT=complexity
samtools view -c -F 4 A1.sorted.piccard.bam

##Single-cell ATAC-seq libraries with > 5k fragments after mapping and duplication removal were considered for downstream analysis.##


#### Processing and peak calling for Bulk ATAC-seq data. #####
#############################################################################
## Three biological replicates were generated for 0h and 24h time-points. Bulk ATAC-seq was generated for the purpose of simply calling peaks that would then be used for quantification of single-cell ATAC-seq activity##

##Bulk ATAC-seq mapping 
##example for single replicate 

module load bowtie2

bowtie2 -x mm10 -1 0h_rep1-Read1.fastq -2 0h_rep1-Read2.fastq -S $i.sam -p 10 --trim3 10 -X 2000

##example peak calling for single bulk replicate##
module load homer
findPeaks <tags> -o 0h_rep1 -localSize 50000 -size 150 -minDist 50 –fragLength 0

##Peaks were called for all samples and intersected within time-point replicates using bedTools intersect function to generate a 0h and 24h peak set##

##Final peaks were generated by consolidating 0h and 24h peak set using the bedops merge function)##

#### Generation of scATAC-seq matrix ####
#############################################################################
##Functions for generating matrix were used from SOMatic (https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_csjansen_SOMatic-29-23-23&d=DwIGaQ&c=sJ6xIWYx-zLMB3EPkvcnVg&r=1rNtuk6CYez3Endg5HqYEg&m=0aNj56FCubQL3d2vuuBMMPlr6_wrQxKVKKmmyeGBDtA&s=vnutGXyOjlj1CnsrQlWuo2lZtv7LKBrU4ZyE4uLX0Ho&e= 

##Mapped DNA sequencing experiments need to be in sam format and peaks need to be called for them in bed format. The locations of these files need to be placed in 2 text files (1 experiment per line). We'll name them bedFiles and samFiles in this tutorial. A sample.list file also needs to be made that provides titles to each of the experiments in samFiles. Be sure that these sample names have no special characters as it could ruin the website (. and - are fine).##

##example count estimation from a single-cell ATAC-seq sample determined using bulk ATAC peaks determined above##
Module load samtools
samtools bedcov final_bulk_peaks A1.sorted.piccard.bam > A1.counts.bed

##this was repeated for all single-cells and compiled to generate the final matrix called TrainingscDNAseq_withNames.txt##
paste -d’\t’ A1.counts.bed A2.counts.bed … … > TrainingscDNAseq_withNames.txt
